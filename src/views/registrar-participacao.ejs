<!DOCTYPE html>
<html lang="pt-br">

<head>
    <meta charset="UTF-8">
    <title>Registrar / Cancelar ParticipaÃ§Ã£o - Semana AcadÃªmica</title>
    <script src="https://unpkg.com/html5-qrcode"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/style.css">
    <style>
        .page-title {
            text-align: center;
            margin-bottom: 1.5rem;
            font-size: 1.8rem;
            font-weight: 600;
            color: #2c3e50;
        }

        .card {
            background: #fff;
            border-radius: 12px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.08);
            padding: 2rem;
            max-width: 500px;
            margin: 0 auto;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        select {
            width: 100%;
            padding: 12px;
            font-size: 16px;
            border-radius: 8px;
            border: 1px solid #ccc;
        }

        .btn {
            width: 100%;
            padding: 14px;
            font-size: 16px;
            font-weight: bold;
            border-radius: 8px;
            border: none;
            cursor: pointer;
            margin-bottom: 12px;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background-color: #2196F3;
            color: white;
        }

        .btn-primary:hover {
            background-color: #0b7dda;
        }

        .btn-success {
            background-color: #4CAF50;
            color: white;
        }

        .btn-success:hover {
            background-color: #45a049;
        }

        .btn-danger {
            background-color: #f44336;
            color: white;
        }

        .btn-danger:hover {
            background-color: #da190b;
        }

        .btn-warning {
            background-color: #ff9800;
            color: white;
        }

        .btn-warning:hover {
            background-color: #e68a00;
        }

        .btn-info {
            background-color: #00bcd4;
            color: white;
        }

        .btn-info:hover {
            background-color: #009bb3;
        }

        #reader {
            width: 100%;
            max-width: 300px;
            margin: 20px auto;
            display: none;
        }

        #resultado {
            font-size: 16px;
            margin-top: 10px;
            color: #2e7d32;
            text-align: center;
            font-weight: 500;
        }

        #erro {
            font-size: 16px;
            margin-top: 8px;
            color: #d32f2f;
            text-align: center;
            font-weight: 500;
        }

        @media (max-width: 480px) {
            .card {
                padding: 1.2rem;
            }

            .page-title {
                font-size: 1.5rem;
            }
        }
    </style>
</head>

<body>
    <h1 class="page-title">Registrar / Cancelar ParticipaÃ§Ã£o</h1>

    <div class="card">
        <div class="form-group">
            <select id="eventoSelect">
                <option value="">-- Escolha o evento --</option>
                <% eventos.forEach(e=> { %>
                    <option value="<%= e.id %>">
                        <%= e.nome %>
                    </option>
                    <% }) %>
            </select>
        </div>

        <button id="btnToggle" class="btn btn-success">ðŸ”µ Modo: Registrar ParticipaÃ§Ã£o</button>
        <button id="btnStart" class="btn btn-primary">ðŸ“· Iniciar Scanner</button>

        <div id="reader"></div>

        <div id="resultado"></div>
        <div id="erro"></div>
    </div>

    <script>
        const resultado = document.getElementById("resultado");
        const erro = document.getElementById("erro");
        const eventoSelect = document.getElementById("eventoSelect");
        const btnStart = document.getElementById("btnStart");
        const btnToggle = document.getElementById("btnToggle");
        const readerDiv = document.getElementById("reader");

        let html5QrcodeScanner;
        let modo = "registrar";
        let scannerAtivo = false; // novo controle

        // alterna registrar/cancelar
        btnToggle.addEventListener("click", () => {
            if (modo === "registrar") {
                modo = "cancelar";
                btnToggle.textContent = "ðŸ”´ Modo: Cancelar ParticipaÃ§Ã£o";
                btnToggle.className = "btn btn-danger";
            } else {
                modo = "registrar";
                btnToggle.textContent = "ðŸ”µ Modo: Registrar ParticipaÃ§Ã£o";
                btnToggle.className = "btn btn-success";
            }
        });

        function registrarOuCancelar(matricula, eventoId) {
            if (!eventoId) {
                erro.innerText = "Selecione o evento!";
                return;
            }
            const url = `/participacao/${matricula}/${eventoId}`;
            const method = modo === "registrar" ? "POST" : "DELETE";

            fetch(url, {
                headers: { "Content-Type": "application/json" },
                credentials: "include",
                method,
            })
                .then(res => {
                    if (res.status === 401) throw new Error("VocÃª precisa estar logado.");
                    return res.json();
                })
                .then(data => {
                    if (data.error) {
                        erro.innerText = data.error;
                        resultado.innerText = "";
                    } else {
                        const acao = modo === "registrar" ? "Registrado" : "Cancelado";
                        resultado.innerText = `${acao}: ${data.aluno.nome} | Pontos: ${data.aluno.pontos}`;
                        erro.innerText = "";
                    }
                })
                .catch(e => {
                    erro.innerText = e.message || "Erro na requisiÃ§Ã£o";
                    resultado.innerText = "";
                    console.error(e);
                });
        }

        let processingScan = false;

        function onScanSuccess(decodedText) {
            if (processingScan) return;
            processingScan = true;

            const eventoId = eventoSelect.value;
            try {
                let payload = decodedText;
                try { payload = JSON.parse(decodedText); } catch { }

                if (payload) {
                    registrarOuCancelar(payload, eventoId);

                    pararScanner(); // fecha scanner automaticamente apÃ³s leitura
                    processingScan = false;
                } else {
                    erro.innerText = "QR Code invÃ¡lido!";
                    processingScan = false;
                }
            } catch (e) {
                erro.innerText = "Erro ao ler QR Code!";
                console.error(e);
                processingScan = false;
            }
        }

        // inicia scanner
        function iniciarScanner() {
            if (!eventoSelect.value) {
                erro.innerText = "Selecione o evento antes de iniciar!";
                return;
            }

            resultado.innerText = "";
            erro.innerText = "";

            readerDiv.style.display = "block";

            html5QrcodeScanner = new Html5Qrcode("reader");
            html5QrcodeScanner.start(
                { facingMode: "environment" },
                { fps: 10, qrbox: 250 },
                onScanSuccess
            ).then(() => {
                scannerAtivo = true;
                btnStart.textContent = "ðŸ›‘ Parar Scanner";
                btnStart.className = "btn btn-warning";
            }).catch(err => {
                erro.innerText = "Erro ao iniciar cÃ¢mera!";
                console.error(err);
                scannerAtivo = false;
            });
        }

        // parar scanner manualmente
        function pararScanner() {
            if (html5QrcodeScanner) {
                html5QrcodeScanner.stop().then(() => {
                    html5QrcodeScanner.clear();
                    readerDiv.style.display = "none";
                    scannerAtivo = false;
                    btnStart.textContent = "ðŸ“· Iniciar Scanner";
                    btnStart.className = "btn btn-primary";
                }).catch(err => {
                    console.error("Erro ao parar scanner:", err);
                });
            }
        }

        // clique do botÃ£o
        btnStart.addEventListener("click", () => {
            if (scannerAtivo) {
                pararScanner();
            } else {
                iniciarScanner();
            }
        });
    </script>
</body>

</html>